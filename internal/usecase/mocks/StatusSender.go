// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	commands "github.com/IgorAleksandroff/agent-status/internal/usecase/external_command/commands"
	mock "github.com/stretchr/testify/mock"
)

// StatusSender is an autogenerated mock type for the StatusSender type
type StatusSender struct {
	mock.Mock
}

type StatusSender_Expecter struct {
	mock *mock.Mock
}

func (_m *StatusSender) EXPECT() *StatusSender_Expecter {
	return &StatusSender_Expecter{mock: &_m.Mock}
}

// Send provides a mock function with given fields: cmd
func (_m *StatusSender) Send(cmd commands.Base) error {
	ret := _m.Called(cmd)

	var r0 error
	if rf, ok := ret.Get(0).(func(commands.Base) error); ok {
		r0 = rf(cmd)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StatusSender_Send_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Send'
type StatusSender_Send_Call struct {
	*mock.Call
}

// Send is a helper method to define mock.On call
//   - cmd commands.Base
func (_e *StatusSender_Expecter) Send(cmd interface{}) *StatusSender_Send_Call {
	return &StatusSender_Send_Call{Call: _e.mock.On("Send", cmd)}
}

func (_c *StatusSender_Send_Call) Run(run func(cmd commands.Base)) *StatusSender_Send_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(commands.Base))
	})
	return _c
}

func (_c *StatusSender_Send_Call) Return(_a0 error) *StatusSender_Send_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewStatusSender interface {
	mock.TestingT
	Cleanup(func())
}

// NewStatusSender creates a new instance of StatusSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStatusSender(t mockConstructorTestingTNewStatusSender) *StatusSender {
	mock := &StatusSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
