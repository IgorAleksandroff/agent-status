// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: proto/auto_assigment.proto

package clients

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AutoAssigmentClient is the client API for AutoAssigment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AutoAssigmentClient interface {
	UserChangeStatus(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*UserChangeStatusResponse, error)
}

type autoAssigmentClient struct {
	cc grpc.ClientConnInterface
}

func NewAutoAssigmentClient(cc grpc.ClientConnInterface) AutoAssigmentClient {
	return &autoAssigmentClient{cc}
}

func (c *autoAssigmentClient) UserChangeStatus(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*UserChangeStatusResponse, error) {
	out := new(UserChangeStatusResponse)
	err := c.cc.Invoke(ctx, "/clients.AutoAssigment/userChangeStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AutoAssigmentServer is the server API for AutoAssigment service.
// All implementations must embed UnimplementedAutoAssigmentServer
// for forward compatibility
type AutoAssigmentServer interface {
	UserChangeStatus(context.Context, *ChangeRequest) (*UserChangeStatusResponse, error)
	mustEmbedUnimplementedAutoAssigmentServer()
}

// UnimplementedAutoAssigmentServer must be embedded to have forward compatible implementations.
type UnimplementedAutoAssigmentServer struct {
}

func (UnimplementedAutoAssigmentServer) UserChangeStatus(context.Context, *ChangeRequest) (*UserChangeStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserChangeStatus not implemented")
}
func (UnimplementedAutoAssigmentServer) mustEmbedUnimplementedAutoAssigmentServer() {}

// UnsafeAutoAssigmentServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AutoAssigmentServer will
// result in compilation errors.
type UnsafeAutoAssigmentServer interface {
	mustEmbedUnimplementedAutoAssigmentServer()
}

func RegisterAutoAssigmentServer(s grpc.ServiceRegistrar, srv AutoAssigmentServer) {
	s.RegisterService(&AutoAssigment_ServiceDesc, srv)
}

func _AutoAssigment_UserChangeStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoAssigmentServer).UserChangeStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clients.AutoAssigment/userChangeStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoAssigmentServer).UserChangeStatus(ctx, req.(*ChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AutoAssigment_ServiceDesc is the grpc.ServiceDesc for AutoAssigment service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AutoAssigment_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "clients.AutoAssigment",
	HandlerType: (*AutoAssigmentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "userChangeStatus",
			Handler:    _AutoAssigment_UserChangeStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/auto_assigment.proto",
}
